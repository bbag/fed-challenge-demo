{"version":3,"sources":["components/Card/Card.js","components/CardGrid/CardGrid.js","App.js","index.js"],"names":["Card","props","styleHero","backgroundImage","image","styleAvatar","avatar","playlistDiv","playlistCount","className","href","src","alt","statsDiv","statsTimeDiv","statsDistanceDiv","statsTime","statsDistance","style","cardTitle","detailsLink","CardGrid","state","cards","playlistLink","this","map","card","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abe18feb.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Card.scss\"\r\n\r\nconst Card = (props) => {\r\n\r\n    /**\r\n    * Styles for the card hero's background image\r\n    */\r\n    const styleHero = {\r\n        backgroundImage: 'url(' + props.image + ')'\r\n    }\r\n\r\n    /**\r\n    * Styles for the avatar's background image\r\n    */\r\n    const styleAvatar = {\r\n        backgroundImage: 'url(' + props.avatar + ')'\r\n    }\r\n\r\n    /**\r\n    * Render the workout playlist section\r\n    */\r\n    let playlistDiv = null;\r\n    if (props.playlistCount > 0) {\r\n        playlistDiv = (\r\n            <a\r\n                className=\"card__playlist\"\r\n                href={props.playlistCount}\r\n            >\r\n                <span className=\"card__playlist__workout-count\">\r\n                    {props.playlistCount}\r\n                </span>\r\n                <span className=\"card__playlist__workout-text\">\r\n                    Workouts\r\n                </span>\r\n                <img\r\n                    className=\"card__playlist__icon\"\r\n                    src=\"/img/icons/icon_playlist.svg\"\r\n                    alt=\"\"\r\n                />\r\n            </a>\r\n        )\r\n    }\r\n\r\n    /**\r\n    * Render the stats section in the card's content\r\n    */\r\n    let statsDiv = null,\r\n        statsTimeDiv = null,\r\n        statsDistanceDiv = null;\r\n    if (props.statsTime) {\r\n        statsTimeDiv = (\r\n            <div className=\"card__stats__time\">\r\n                <img\r\n                    className=\"card__stats__icon\"\r\n                    src=\"/img/icons/icon_timer.svg\"\r\n                    alt=\"\"\r\n                />\r\n                <span className=\"card__stats__text\">\r\n                    {props.statsTime}\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (props.statsDistance) {\r\n        statsDistanceDiv = (\r\n            <div className=\"card__stats__distance\">\r\n                <img\r\n                    className=\"card__stats__icon\"\r\n                    src=\"/img/icons/icon_distance.svg\"\r\n                    alt=\"\"\r\n                />\r\n                <span className=\"card__stats__text\">\r\n                    {props.statsDistance} M\r\n                    </span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (props.statsTime || props.statsDistance) {\r\n        statsDiv = (\r\n            <div className=\"card__stats\">\r\n                {statsTimeDiv}\r\n                {statsDistanceDiv}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    /**\r\n    * Render the main component\r\n    */\r\n    return (\r\n        <li className=\"card\">\r\n            <div\r\n                className=\"card__top\"\r\n                style={styleHero}\r\n            >\r\n                {playlistDiv}\r\n            </div>\r\n            <div className=\"card__bottom\">\r\n                <div className=\"card__content\">\r\n                    <h3 className=\"card__title\">\r\n                        {props.cardTitle}\r\n                    </h3>\r\n                    <div\r\n                        className=\"card__avatar\"\r\n                        style={styleAvatar}\r\n                        alt=\"\"\r\n                    ></div>\r\n                    {statsDiv}\r\n                </div>\r\n                <div className=\"card__cta\">\r\n                    <a href={props.detailsLink}>View Details</a>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\nimport Card from '../../components/Card/Card';\r\nimport \"./CardGrid.scss\"\r\n\r\nclass CardGrid extends Component {\r\n    state = {\r\n        cards: [\r\n            {\r\n                cardTitle: \"Lake Inniscarra, Ireland—Pyramid\",\r\n                image: \"/img/lake-inniscarra.png\",\r\n                avatar: \"/img/avatars/person8.png\",\r\n                statsTime: \"30:53\", // With more time, I'd probably have this as an object that accepts 2 integers, e.g: statsTime { hours: 30, minutes: 53 }\r\n                statsDistance: \"6,248\", // With more time, I'd like to have this as an integer which gets converted to a string with commas in the correct spot later\r\n                playlistCount: 0,\r\n                playlistLink: \"#\",\r\n                detailsLink: \"#\"\r\n            },\r\n            {\r\n                cardTitle: \"Performance Series\",\r\n                image: \"/img/performance-series.png\",\r\n                avatar: \"/img/avatars/person6.png\",\r\n                statsTime: null,\r\n                statsDistance: null,\r\n                playlistCount: 9,\r\n                playlistLink: \"#\",\r\n                detailsLink: \"#\"\r\n            },\r\n            {\r\n                cardTitle: \"Slow Pulls and Fast Intervals\",\r\n                image: \"/img/slow-pulls.png\",\r\n                avatar: \"/img/avatars/person5.png\",\r\n                statsTime: \"44:13\",\r\n                statsDistance: \"9,948\",\r\n                playlistCount: 0,\r\n                playlistLink: \"#\",\r\n                detailsLink: \"#\"\r\n            },\r\n            {\r\n                cardTitle: \"20 Minutes to Toned\",\r\n                image: \"/img/20-minutes-to-toned.png\",\r\n                avatar: \"/img/avatars/person7.png\",\r\n                statsTime: null,\r\n                statsDistance: null,\r\n                playlistCount: 12,\r\n                playlistLink: \"#\",\r\n                detailsLink: \"#\"\r\n            },\r\n            {\r\n                cardTitle: \"Charles Race, Boston, Massachusetts\",\r\n                image: \"/img/charles-race.png\",\r\n                avatar: \"/img/avatars/person4.png\",\r\n                statsTime: \"36:22\",\r\n                statsDistance: \"8,648\",\r\n                playlistCount: 0,\r\n                playlistLink: \"#\",\r\n                detailsLink: \"#\"\r\n            },\r\n            {\r\n                cardTitle: \"Full-Body HIIT Series\",\r\n                image: \"/img/full-body-hiit.png\",\r\n                avatar: \"/img/avatars/person3.png\",\r\n                statsTime: null,\r\n                statsDistance: null,\r\n                playlistCount: 12,\r\n                playlistLink: \"#\",\r\n                detailsLink: \"#\"\r\n            },\r\n            {\r\n                cardTitle: \"Kafue River, Zambia—Power Stroke Pyramid\",\r\n                image: \"/img/kafue-river.png\",\r\n                avatar: \"/img/avatars/person2.png\",\r\n                statsTime: \"22:22\",\r\n                statsDistance: \"4,660\",\r\n                playlistCount: 0,\r\n                playlistLink: \"#\",\r\n                detailsLink: \"#\"\r\n            },\r\n            {\r\n                cardTitle: \"Shred & Burn Series\",\r\n                image: \"/img/shred-burn.png\",\r\n                avatar: \"/img/avatars/person10.png\",\r\n                statsTime: null,\r\n                statsDistance: null,\r\n                playlistCount: 16,\r\n                playlistLink: \"#\",\r\n                detailsLink: \"#\"\r\n            }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            /** Since we're showing a list of cards, a <ul> is semantic here */\r\n            <ul className=\"card-grid\">\r\n                {\r\n                    /** Returns an array of card <li> elements */\r\n                    this.state.cards.map(card => {\r\n                        return <Card\r\n                            cardTitle={card.cardTitle}\r\n                            image={card.image}\r\n                            avatar={card.avatar}\r\n                            statsTime={card.statsTime}\r\n                            statsDistance={card.statsDistance}\r\n                            playlistCount={card.playlistCount}\r\n                            playlistLink={card.playlistLink}\r\n                            detailsLink={card.detailsLink}\r\n                        />\r\n                    })\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardGrid;","import './App.scss';\nimport CardGrid from './components/CardGrid/CardGrid';\n\nfunction App() {\n    return (\n        <CardGrid />\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}